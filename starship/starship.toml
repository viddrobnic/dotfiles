format = """
[┌──](bold green)$username[@](bold yellow dimmed)$hostname \
$directory\
${custom.jj}${custom.git_branch}\
$python\
$golang\
$rust\
$nodejs
[└─](bold green)$character
"""

right_format = """$cmd_duration"""

add_newline = true

[character]
success_symbol = '[❯](bold green)'
error_symbol = '[❯](bold red)'

[username]
show_always = true
style_user = 'bold yellow'
format = '[$user]($style)'

[hostname]
ssh_only = false
style = 'bold cyan'
format = '[$hostname]($style)'

[directory]
truncate_to_repo = true
home_symbol = '~'
style = 'bold white'

[python]
format = '[\($symbol$version( $virtualenv)\) ]($style)'
style = 'cyan bold'

[golang]
format = '[\($symbol$version\) ]($style)'
style = 'cyan bold'

[rust]
format = '[\($symbol$version\) ]($style)'
style = 'cyan bold'

[nodejs]
format = '[\($symbol $version\) ]($style)'
style = 'cyan bold'
symbol = ''

[cmd_duration]
min_time = 0
format = '[\[$duration\]]($style)'
style = 'bold blue'


[git_branch]
format = '[$symbol$branch(:$remote_branch)]($style) '
style = 'bold blue'

[custom.git_branch]
when = "jj root | complete | if $in.exit_code == 0 { exit 1 } else { exit 0 }"
command = "starship module git_branch"
description = "Only swho git_branch when we're not in a jj repo"

[custom.jj]
ignore_timeout = true
description = "Current jj status"
symbol = ""
when = true
command = '''
jj root | ignore; jj log --revisions @ --no-graph --ignore-working-copy --color always --limit 1 --template '
  separate(" ",
    "🥋",
    change_id.shortest(4),
    bookmarks,
    "|",
    concat(
      if(conflict, "💥"),
      if(divergent, "🚧"),
      if(hidden, "👻"),
      if(immutable, "🔒"),
    ),
    raw_escape_sequence("\x1b[1;32m") ++ if(empty, "(empty)"),
    raw_escape_sequence("\x1b[1;32m") ++ if(description.first_line().len() == 0,
      "(no description set)",
      if(description.first_line().substr(0, 29) == description.first_line(),
        description.first_line(),
        description.first_line().substr(0, 29) ++ "…",
      )
    ) ++ raw_escape_sequence("\x1b[0m"),
  )
'
'''
